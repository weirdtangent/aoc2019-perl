#!/usr/bin/perl

use v5.26;
use warnings;
use strict;

my $intcode = <DATA>;
chomp $intcode;
my @intcode = split ',', $intcode;

my $result = run_intcode(\@intcode);
print "Result: $result\n";

sub run_intcode {
  my $code = shift;

  my $count = 0;
  my $input = 5;
  my $output;
  my $iptr = 0;

  while ($iptr < scalar(@$code) && $code->[$iptr] != 99) {
    my $command = sprintf("%05d", $code->[$iptr]);
    my ($mode, $opcode) = $command =~ /^(\d\d\d)(\d\d)$/;
    my @param_mode = split '', sprintf("%03d", $mode);

    # print "Command ".($count + 1).": $command gives me '".join('',@param_mode)."' and '$opcode'\n";

    if ($opcode eq '01') {
      $code->[$code->[$iptr+3]] = ($param_mode[2] eq '0' ? $code->[$code->[$iptr+1]] : $code->[$iptr+1])
                                + ($param_mode[1] eq '0' ? $code->[$code->[$iptr+2]] : $code->[$iptr+2]);
      $iptr += 4;
    }
    elsif ($opcode eq '02') {
      $code->[$code->[$iptr+3]] = ($param_mode[2] eq '0' ? $code->[$code->[$iptr+1]] : $code->[$iptr+1])
                                * ($param_mode[1] eq '0' ? $code->[$code->[$iptr+2]] : $code->[$iptr+2]);
      $iptr += 4;
    }
    elsif ($opcode eq '03') {
      $code->[$code->[$iptr+1]] = $input;
      $iptr += 2;
    }
    elsif ($opcode eq '04') {
      $output = ($param_mode[2] eq '0' ? $code->[$code->[$iptr+1]] : $code->[$iptr+1]);
      die "Failure: output was $output and next opcode was ".$code->[$iptr+2]."\n" unless $output == 0 || $code->[$iptr+2] == 99;
      $iptr += 2;
    }
    elsif ($opcode eq '05') {
      my $test = ($param_mode[2] eq '0' ? $code->[$code->[$iptr+1]] : $code->[$iptr+1]);
      $iptr = ($test != 0) ? ($param_mode[1] eq '0' ? $code->[$code->[$iptr+2]] : $code->[$iptr+2]) : $iptr + 3;
    }
    elsif ($opcode eq '06') {
      my $test = ($param_mode[2] eq '0' ? $code->[$code->[$iptr+1]] : $code->[$iptr+1]);
      $iptr = ($test == 0) ? ($param_mode[1] eq '0' ? $code->[$code->[$iptr+2]] : $code->[$iptr+2]) : $iptr + 3;
    }
    elsif ($opcode eq '07') {
      my $compare1 = ($param_mode[2] eq '0' ? $code->[$code->[$iptr+1]] : $code->[$iptr+1]);
      my $compare2 = ($param_mode[1] eq '0' ? $code->[$code->[$iptr+2]] : $code->[$iptr+2]);
      $code->[$code->[$iptr+3]] = $compare1 < $compare2 ? 1 : 0;
      $iptr += 4;
    }
    elsif ($opcode eq '08') {
      my $compare1 = ($param_mode[2] eq '0' ? $code->[$code->[$iptr+1]] : $code->[$iptr+1]);
      my $compare2 = ($param_mode[1] eq '0' ? $code->[$code->[$iptr+2]] : $code->[$iptr+2]);
      $code->[$code->[$iptr+3]] = $compare1 == $compare2 ? 1 : 0;
      $iptr += 4;
    }

    $count++;
  }
  print "Diagnostic code: $output\n" if $output;

  return $code->[0];
}




__DATA__
3,225,1,225,6,6,1100,1,238,225,104,0,1102,45,16,225,2,65,191,224,1001,224,-3172,224,4,224,102,8,223,223,1001,224,5,224,1,223,224,223,1102,90,55,225,101,77,143,224,101,-127,224,224,4,224,102,8,223,223,1001,224,7,224,1,223,224,223,1102,52,6,225,1101,65,90,225,1102,75,58,225,1102,53,17,224,1001,224,-901,224,4,224,1002,223,8,223,1001,224,3,224,1,224,223,223,1002,69,79,224,1001,224,-5135,224,4,224,1002,223,8,223,1001,224,5,224,1,224,223,223,102,48,40,224,1001,224,-2640,224,4,224,102,8,223,223,1001,224,1,224,1,224,223,223,1101,50,22,225,1001,218,29,224,101,-119,224,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1101,48,19,224,1001,224,-67,224,4,224,102,8,223,223,1001,224,6,224,1,223,224,223,1101,61,77,225,1,13,74,224,1001,224,-103,224,4,224,1002,223,8,223,101,3,224,224,1,224,223,223,1102,28,90,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,7,226,677,224,102,2,223,223,1005,224,329,1001,223,1,223,8,226,677,224,1002,223,2,223,1005,224,344,101,1,223,223,8,226,226,224,1002,223,2,223,1006,224,359,101,1,223,223,1008,677,226,224,1002,223,2,223,1005,224,374,1001,223,1,223,108,677,677,224,1002,223,2,223,1005,224,389,1001,223,1,223,1107,226,677,224,1002,223,2,223,1006,224,404,101,1,223,223,1008,226,226,224,102,2,223,223,1006,224,419,1001,223,1,223,7,677,226,224,1002,223,2,223,1005,224,434,101,1,223,223,1108,226,226,224,1002,223,2,223,1005,224,449,101,1,223,223,7,226,226,224,102,2,223,223,1005,224,464,101,1,223,223,108,677,226,224,102,2,223,223,1005,224,479,1001,223,1,223,1007,677,226,224,1002,223,2,223,1006,224,494,1001,223,1,223,1007,677,677,224,1002,223,2,223,1006,224,509,1001,223,1,223,107,677,677,224,1002,223,2,223,1005,224,524,101,1,223,223,1108,226,677,224,102,2,223,223,1006,224,539,1001,223,1,223,8,677,226,224,102,2,223,223,1005,224,554,101,1,223,223,1007,226,226,224,102,2,223,223,1006,224,569,1001,223,1,223,107,677,226,224,102,2,223,223,1005,224,584,1001,223,1,223,108,226,226,224,102,2,223,223,1006,224,599,1001,223,1,223,107,226,226,224,1002,223,2,223,1006,224,614,1001,223,1,223,1108,677,226,224,1002,223,2,223,1005,224,629,1001,223,1,223,1107,677,677,224,102,2,223,223,1005,224,644,1001,223,1,223,1008,677,677,224,102,2,223,223,1005,224,659,101,1,223,223,1107,677,226,224,1002,223,2,223,1006,224,674,101,1,223,223,4,223,99,226
